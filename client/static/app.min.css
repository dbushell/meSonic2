@layer base, components, utility; @layer base { /* @link https://utopia.fyi/type/calculator?c=314,14,1.125,1464,16,1.414,5,0,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,m,3xl,12 */ :root { --step-0: clamp(0.875rem, 0.8409rem + 0.1739vw, 1rem); --step-1: clamp(0.9844rem, 0.8671rem + 0.5974vw, 1.4138rem); --step-2: clamp(1.1075rem, 0.864rem + 1.2409vw, 1.9994rem); --step-3: clamp(1.2456rem, 0.8139rem + 2.2vw, 2.8269rem); --step-4: clamp(1.4019rem, 0.6932rem + 3.6113vw, 3.9975rem); --step-5: clamp(1.5769rem, 0.4641rem + 5.6704vw, 5.6525rem); } /* @link https://utopia.fyi/space/calculator?c=314,14,1.125,1464,16,1.414,5,0,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,m,3xl,12 */ :root { --space-3xs: clamp(0.25rem, 0.25rem + 0vw, 0.25rem); --space-2xs: clamp(0.4375rem, 0.4204rem + 0.087vw, 0.5rem); --space-xs: clamp(0.6875rem, 0.6704rem + 0.087vw, 0.75rem); --space-s: clamp(0.875rem, 0.8409rem + 0.1739vw, 1rem); --space-m: clamp(1.3125rem, 1.2613rem + 0.2609vw, 1.5rem); --space-l: clamp(1.75rem, 1.6817rem + 0.3478vw, 2rem); --space-xl: clamp(2.625rem, 2.5226rem + 0.5217vw, 3rem); --space-2xl: clamp(3.5rem, 3.3635rem + 0.6957vw, 4rem); --space-3xl: clamp(5.25rem, 5.0452rem + 1.0435vw, 6rem); /* One-up pairs */ --space-3xs-2xs: clamp(0.25rem, 0.1817rem + 0.3478vw, 0.5rem); --space-2xs-xs: clamp(0.4375rem, 0.3522rem + 0.4348vw, 0.75rem); --space-xs-s: clamp(0.6875rem, 0.6022rem + 0.4348vw, 1rem); --space-s-m: clamp(0.875rem, 0.7043rem + 0.8696vw, 1.5rem); --space-m-l: clamp(1.3125rem, 1.1248rem + 0.9565vw, 2rem); --space-l-xl: clamp(1.75rem, 1.4087rem + 1.7391vw, 3rem); --space-xl-2xl: clamp(2.625rem, 2.2496rem + 1.913vw, 4rem); --space-2xl-3xl: clamp(3.5rem, 2.8174rem + 3.4783vw, 6rem); /* Custom pairs */ --space-s-l: clamp(0.875rem, 0.5678rem + 1.5652vw, 2rem); } /* @link https://utopia.fyi/grid/calculator?c=314,14,1.125,1464,16,1.414,5,0,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,m,3xl,12 */ :root { --grid-max-width: 91.5rem; --grid-columns: 12; --grid-column-gap: var( --space-s-m, clamp(0.875rem, 0.7043rem + 0.8696vw, 1.5rem) ); --grid-row-gap: var(--space-l-xl); --grid-margin: clamp( 0px, calc(5dvw - var(--grid-column-gap)), calc(var(--space-xl) - var(--grid-column-gap)) ); --grid-main: clamp( 0px, calc(100% - (var(--grid-column-gap) * 2)), calc(var(--grid-max-width) - (var(--grid-column-gap) * 2)) ); --grid-column: calc( (var(--grid-main) - (var(--grid-column-gap) * ((var(--grid-columns) - 1)))) / var(--grid-columns) ); --grid-template-basic: [outer-start] auto [inner-start main-start] var(--grid-main) [main-end inner-end] auto [outer-end]; --grid-template-advanced: [outer-start] auto [inner-start aside-start] repeat(3, var(--grid-column)) [aside-end main-start] repeat(9, var(--grid-column)) [main-end inner-end] auto [outer-end]; --block-gap1: var(--space-m); --block-gap2: var(--space-l); } :root { --scroll-y: 0; --scroll-dir: 1; --color-blue: 70% 0.162 250; --color-green: 75% 0.172 150; --color-pink: 75% 0.22 330; --color-yellow: 95% 0.12 102; --color-bg-default: 20% 0.015 275; --color-bg-dark: 15% 0.015 275; --color-bg-light: 25% 0.015 275; --color-bg-lighter: 35% 0.015 275; --color-text: 97% 0.02 80; --color-text-subtle: 67% 0.02 80; --color-primary: var(--color-green); --color-secondary: var(--color-blue); --color-tertiary: var(--color-yellow); --color-focus: var(--color-pink); --color-anchor: var(--color-primary); --focus-outline: calc((2 / 16) * 1rem) solid oklch(var(--color-focus)); --font-monospace: 'MonaspaceNeon'; --font-display: 'OpenSans'; --font-sans: 'OpenSans'; --font-size: var(--step-1); --line-height: 1.4; } :root[data-theme='dark'] { --color-bg-default: 20% 0.015 275; --color-bg-dark: 15% 0.015 275; --color-bg-light: 25% 0.015 275; --color-bg-lighter: 35% 0.015 275; --color-text: 97% 0.02 80; --color-text-subtle: 67% 0.02 80; } :root[data-theme='light'] { --color-bg-default: 97% 0.02 80; --color-bg-dark: 95% 0.02 80; --color-bg-light: 93% 0.02 80; --color-bg-lighter: 90% 0.02 80; --color-text: 20% 0.015 275; --color-text-subtle: 60% 0.015 275; --color-blue: 60% 0.162 250; --color-green: 65% 0.172 150; --color-pink: 65% 0.22 330; } @media (prefers-color-scheme: light) { :root:not([data-theme]) { --color-bg-default: 97% 0.02 80; --color-bg-dark: 95% 0.02 80; --color-bg-light: 93% 0.02 80; --color-bg-lighter: 90% 0.02 80; --color-text: 20% 0.015 275; --color-text-subtle: 60% 0.015 275; --color-blue: 60% 0.162 250 --color-green: 65% 0.172 150; --color-pink: 65% 0.22 330; } } } @layer base { *, *::after, *::before { box-sizing: border-box; } html { hanging-punctuation: first allow-end last; scroll-behavior: smooth; } @media (prefers-reduced-motion: reduce) { html { scroll-behavior: auto; } } .translated-rtl { direction: rtl; } body { margin: 0; padding: 0; } img, svg, video { border: 0; block-size: auto; display: block; max-inline-size: 100%; } button { appearance: none; background: transparent; border: none; color: currentColor; font: inherit; line-height: inherit; outline: none; text-align: start; &:hover { cursor: pointer; } } b, strong { font-weight: 700; } small, figcaption { font-size: var(--step-0); } abbr { &[title] { border: none; text-decoration: none; } } ul, ol { list-style: none; margin: 0; padding: 0; } li { margin: 0; padding: 0; } [popover] { background: transparent; border: 0; color: currentColor; margin: 0; padding: 0; position: fixed; } } @layer base { @font-face { font-family: 'OpenSans'; src: url('/fonts/OpenSans-Regular.woff2') format('woff2'); font-display: fallback; font-weight: 400; font-style: normal; } @font-face { font-family: 'OpenSans'; src: url('/fonts/OpenSans-Bold.woff2') format('woff2'); font-display: fallback; font-weight: 700; font-style: normal; } @font-face { font-family: 'MonaspaceNeon'; src: url('/fonts/MonaspaceNeon-Regular.woff') format('woff2'); font-display: fallback; font-weight: 400; font-style: normal; } } @layer base { .Document { background: oklch(var(--color-bg-default)); color: oklch(var(--color-text)); font-family: var(--font-sans), sans-serif; font-weight: 400; line-height: var(--line-height); margin: 0; padding: 0; scrollbar-color: oklch(var(--color-blue)) oklch(var(--color-bg-default)); } } @layer base { .Body { min-block-size: 100dvh; } } @layer base { a { --color: var(--color-anchor); --underline-opacity: 0.5; color: oklch(var(--color)); text-decoration-line: underline; text-decoration-thickness: calc((1 / 16) * 1rem); text-decoration-skip-ink: all; text-decoration-color: oklch(var(--color) / var(--underline-opacity)); text-underline-offset: 0.15em; transition: color 200ms, text-decoration-color 200ms; &:active, &:visited { color: oklch(var(--color)); } &:hover { --color: var(--color-secondary); } &:focus { --color: var(--color-focus); outline: none; } &:focus-visible { --underline-opacity: 0; outline: var(--focus-outline); outline-offset: calc((2 / 16) * 1rem); } } h1, h2, h3, h4, h5, h6 { font-family: var(--font-display), serif; font-size: var(--font-size); font-weight: 700; line-height: var(--line-height); margin: 0; margin-block-end: var(--block-gap1); &:last-child { margin-block-end: 0; } :where(p, ol, ul) + & { margin-block-start: var(--grid-row-gap); } } h1 { --font-size: var(--step-4); line-height: 1; } h2 { --font-size: var(--step-3); line-height: 1.1; } h3 { --font-size: var(--step-2); line-height: 1.2; } h4 { --font-size: var(--step-1); line-height: 1.3; } sup { font-size: var(--step-0); vertical-align: top; } p { font-size: var(--font-size); margin: 0; margin-block-end: var(--block-gap1); max-inline-size: 70ch; &:last-child { margin-block-end: 0; } } ul, ol { --bullet: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 15 15"><path fill="oklch(97% 0.02 80)" d="M9.625 5.375L15 7.5 9.625 9.625 7.5 15 5.375 9.625 0 7.5l5.375-2.125L7.5 0z"/></svg>'); --bullet-size: calc(var(--font-size) * var(--line-height)); margin-block-end: var(--block-gap1); list-style: none outside; &:last-child { margin-block-end: 0; } & li { font-size: var(--font-size); margin-block-end: var(--space-2xs); padding-inline-start: calc(var(--bullet-size) + var(--space-2xs)); position: relative; &:last-child { margin-block-end: 0; } &::before { content: 'â€¢'; color: transparent; display: block; background: var(--bullet) center center no-repeat; background-size: calc(var(--font-size) * 0.9) auto; block-size: var(--bullet-size); inline-size: var(--bullet-size); inset-block-start: 0; inset-inline-start: 0; position: absolute; } } :where(&) & { margin-block-start: var(--space-2xs); /* margin-inline-start: var(--space-m); */ } } ol { counter-reset: ol-counter; & li { &::before { background: none; color: currentColor; content: counter(ol-counter) '.'; counter-increment: ol-counter; text-align: center; } } } pre { font-family: var(--font-monospace), monospace; margin-block-end: var(--block-gap1); &:last-child { margin-block-end: 0; } } code { font-family: var(--font-monospace), monospace; color: oklch(var(--color-secondary)); } } @layer base { /*! Theme: GitHub Dark Description: Dark theme as seen on github.com Author: github.com Maintainer: @Hirse Updated: 2021-05-15 Outdated base version: https://github.com/primer/github-syntax-dark Current colors taken from GitHub's CSS */ /*! Theme: GitHub Description: Light theme as seen on github.com Author: github.com Maintainer: @Hirse Updated: 2021-05-15 Outdated base version: https://github.com/primer/github-syntax-light Current colors taken from GitHub's CSS */ @media (prefers-color-scheme: dark) { :where(:root:not([data-theme])) { & .hljs { color: #c9d1d9; background: #0d1117; } & .hljs-doctag, & .hljs-keyword, & .hljs-meta .hljs-keyword, & .hljs-template-tag, & .hljs-template-variable, & .hljs-type, & .hljs-variable.language_ { /* prettylights-syntax-keyword */ color: #ff7b72; } & .hljs-title, & .hljs-title.class_, & .hljs-title.class_.inherited__, & .hljs-title.function_ { /* prettylights-syntax-entity */ color: #d2a8ff; } & .hljs-attr, & .hljs-attribute, & .hljs-literal, & .hljs-meta, & .hljs-number, & .hljs-operator, & .hljs-variable, & .hljs-selector-attr, & .hljs-selector-class, & .hljs-selector-id { /* prettylights-syntax-constant */ color: #79c0ff; } & .hljs-regexp, & .hljs-string, & .hljs-meta .hljs-string { /* prettylights-syntax-string */ color: #a5d6ff; } & .hljs-built_in, & .hljs-symbol { /* prettylights-syntax-variable */ color: #ffa657; } & .hljs-comment, & .hljs-code, & .hljs-formula { /* prettylights-syntax-comment */ color: #8b949e; } & .hljs-name, & .hljs-quote, & .hljs-selector-tag, & .hljs-selector-pseudo { /* prettylights-syntax-entity-tag */ color: #7ee787; } & .hljs-subst { /* prettylights-syntax-storage-modifier-import */ color: #c9d1d9; } & .hljs-section { /* prettylights-syntax-markup-heading */ color: #1f6feb; font-weight: bold; } & .hljs-bullet { /* prettylights-syntax-markup-list */ color: #f2cc60; } & .hljs-emphasis { /* prettylights-syntax-markup-italic */ color: #c9d1d9; font-style: italic; } & .hljs-strong { /* prettylights-syntax-markup-bold */ color: #c9d1d9; font-weight: bold; } & .hljs-addition { /* prettylights-syntax-markup-inserted */ color: #aff5b4; background-color: #033a16; } & .hljs-deletion { /* prettylights-syntax-markup-deleted */ color: #ffdcd7; background-color: #67060c; } } } @media (prefers-color-scheme: light) { :where(:root:not([data-theme])) { & .hljs { color: #24292e; background: #ffffff; } & .hljs-doctag, & .hljs-keyword, & .hljs-meta .hljs-keyword, & .hljs-template-tag, & .hljs-template-variable, & .hljs-type, & .hljs-variable.language_ { /* prettylights-syntax-keyword */ color: #d73a49; } & .hljs-title, & .hljs-title.class_, & .hljs-title.class_.inherited__, & .hljs-title.function_ { /* prettylights-syntax-entity */ color: #6f42c1; } & .hljs-attr, & .hljs-attribute, & .hljs-literal, & .hljs-meta, & .hljs-number, & .hljs-operator, & .hljs-variable, & .hljs-selector-attr, & .hljs-selector-class, & .hljs-selector-id { /* prettylights-syntax-constant */ color: #005cc5; } & .hljs-regexp, & .hljs-string, & .hljs-meta .hljs-string { /* prettylights-syntax-string */ color: #032f62; } & .hljs-built_in, & .hljs-symbol { /* prettylights-syntax-variable */ color: #e36209; } & .hljs-comment, & .hljs-code, & .hljs-formula { /* prettylights-syntax-comment */ color: #6a737d; } & .hljs-name, & .hljs-quote, & .hljs-selector-tag, & .hljs-selector-pseudo { /* prettylights-syntax-entity-tag */ color: #22863a; } & .hljs-subst { /* prettylights-syntax-storage-modifier-import */ color: #24292e; } & .hljs-section { /* prettylights-syntax-markup-heading */ color: #005cc5; font-weight: bold; } & .hljs-bullet { /* prettylights-syntax-markup-list */ color: #735c0f; } & .hljs-emphasis { /* prettylights-syntax-markup-italic */ color: #24292e; font-style: italic; } & .hljs-strong { /* prettylights-syntax-markup-bold */ color: #24292e; font-weight: bold; } & .hljs-addition { /* prettylights-syntax-markup-inserted */ color: #22863a; background-color: #f0fff4; } & .hljs-deletion { /* prettylights-syntax-markup-deleted */ color: #b31d28; background-color: #ffeef0; } } } :where(:root[data-theme='dark']) { & .hljs { color: #c9d1d9; background: #0d1117; } & .hljs-doctag, & .hljs-keyword, & .hljs-meta .hljs-keyword, & .hljs-template-tag, & .hljs-template-variable, & .hljs-type, & .hljs-variable.language_ { /* prettylights-syntax-keyword */ color: #ff7b72; } & .hljs-title, & .hljs-title.class_, & .hljs-title.class_.inherited__, & .hljs-title.function_ { /* prettylights-syntax-entity */ color: #d2a8ff; } & .hljs-attr, & .hljs-attribute, & .hljs-literal, & .hljs-meta, & .hljs-number, & .hljs-operator, & .hljs-variable, & .hljs-selector-attr, & .hljs-selector-class, & .hljs-selector-id { /* prettylights-syntax-constant */ color: #79c0ff; } & .hljs-regexp, & .hljs-string, & .hljs-meta .hljs-string { /* prettylights-syntax-string */ color: #a5d6ff; } & .hljs-built_in, & .hljs-symbol { /* prettylights-syntax-variable */ color: #ffa657; } & .hljs-comment, & .hljs-code, & .hljs-formula { /* prettylights-syntax-comment */ color: #8b949e; } & .hljs-name, & .hljs-quote, & .hljs-selector-tag, & .hljs-selector-pseudo { /* prettylights-syntax-entity-tag */ color: #7ee787; } & .hljs-subst { /* prettylights-syntax-storage-modifier-import */ color: #c9d1d9; } & .hljs-section { /* prettylights-syntax-markup-heading */ color: #1f6feb; font-weight: bold; } & .hljs-bullet { /* prettylights-syntax-markup-list */ color: #f2cc60; } & .hljs-emphasis { /* prettylights-syntax-markup-italic */ color: #c9d1d9; font-style: italic; } & .hljs-strong { /* prettylights-syntax-markup-bold */ color: #c9d1d9; font-weight: bold; } & .hljs-addition { /* prettylights-syntax-markup-inserted */ color: #aff5b4; background-color: #033a16; } & .hljs-deletion { /* prettylights-syntax-markup-deleted */ color: #ffdcd7; background-color: #67060c; } } :where(:root[data-theme='light']) { & .hljs { color: #24292e; background: #ffffff; } & .hljs-doctag, & .hljs-keyword, & .hljs-meta .hljs-keyword, & .hljs-template-tag, & .hljs-template-variable, & .hljs-type, & .hljs-variable.language_ { /* prettylights-syntax-keyword */ color: #d73a49; } & .hljs-title, & .hljs-title.class_, & .hljs-title.class_.inherited__, & .hljs-title.function_ { /* prettylights-syntax-entity */ color: #6f42c1; } & .hljs-attr, & .hljs-attribute, & .hljs-literal, & .hljs-meta, & .hljs-number, & .hljs-operator, & .hljs-variable, & .hljs-selector-attr, & .hljs-selector-class, & .hljs-selector-id { /* prettylights-syntax-constant */ color: #005cc5; } & .hljs-regexp, & .hljs-string, & .hljs-meta .hljs-string { /* prettylights-syntax-string */ color: #032f62; } & .hljs-built_in, & .hljs-symbol { /* prettylights-syntax-variable */ color: #e36209; } & .hljs-comment, & .hljs-code, & .hljs-formula { /* prettylights-syntax-comment */ color: #6a737d; } & .hljs-name, & .hljs-quote, & .hljs-selector-tag, & .hljs-selector-pseudo { /* prettylights-syntax-entity-tag */ color: #22863a; } & .hljs-subst { /* prettylights-syntax-storage-modifier-import */ color: #24292e; } & .hljs-section { /* prettylights-syntax-markup-heading */ color: #005cc5; font-weight: bold; } & .hljs-bullet { /* prettylights-syntax-markup-list */ color: #735c0f; } & .hljs-emphasis { /* prettylights-syntax-markup-italic */ color: #24292e; font-style: italic; } & .hljs-strong { /* prettylights-syntax-markup-bold */ color: #24292e; font-weight: bold; } & .hljs-addition { /* prettylights-syntax-markup-inserted */ color: #22863a; background-color: #f0fff4; } & .hljs-deletion { /* prettylights-syntax-markup-deleted */ color: #b31d28; background-color: #ffeef0; } } } @layer base { .Table { overflow: hidden; overflow-x: auto; overscroll-behavior-inline: contain; margin-block: var(--block-gap2); &:first-child { margin-block-start: 0; } &:last-child { margin-block-end: 0; } } table { border-collapse: collapse; inline-size: 100%; } td, th { border-inline: calc((1 / 16) * 1rem) solid oklch(var(--color-bg-lighter)); font-size: var(--step-0); padding: var(--space-2xs); text-align: start; } th { font-weight: 700; } tr { border-block: calc((1 / 16) * 1rem) solid oklch(var(--color-bg-lighter)); } } @layer base { .Grid { --grid-template: var(--grid-template-advanced); container-name: grid; container-type: inline-size; display: grid; column-gap: var(--grid-column-gap); grid-template-columns: var(--grid-template); inline-size: 100%; padding-inline: var(--grid-margin); row-gap: var(--grid-row-gap); & > * { grid-column: main-start / main-end; } } } @layer base { .App { align-items: start; display: flex; flex-direction: column; min-block-size: 100dvh; & > * { flex: 0 1 auto; min-inline-size: 0; } & > :last-child:not(:only-child) { margin-block-start: auto; } } } @layer components { .Blockquote { margin-block: var(--block-gap2); margin-inline: 0; padding: 0; &:first-child { margin-block-start: 0; } &:last-child { margin-block-end: 0; } & > :nth-last-child(1 of p)::after { content: close-quote; } & > :nth-child(1 of p)::before { content: open-quote; } } } @layer components { .Radio, .Checkbox { --background-color: var(--color-bg-dark); --border-color: var(--color-primary); --border-width: calc((2 / 16) * 1rem); --color: var(--color-text); --opacity-checked: 1; --font-size: var(--step-1); --line-height: 1.2; --block-size: var(--space-m); --inline-size: var(--space-m); display: block; position: relative; & > span { display: block; color: oklch(var(--color)); font-size: var(--font-size); font-weight: 400; line-height: var(--line-height); padding-inline-start: calc(var(--inline-size) + (var(--space-xs))); user-select: none; -webkit-user-select: none; :where(.Button) & { font-size: inherit; line-height: inherit; } &::after, &::before { content: ''; display: block; block-size: var(--block-size); inline-size: var(--inline-size); inset-block-start: 50%; inset-inline-start: 0; position: absolute; transform: translateY(-50%); } &::before { border: var(--border-width) solid oklch(var(--border-color)); border-radius: calc((4 / 16) * 1rem); background-color: oklch(var(--background-color)); } &::after { background-color: oklch(var(--color-text)); background-position: center center; background-repeat: no-repeat; background-size: var(--inline-size) auto; opacity: 0; transition: opacity 200ms; } } & input:checked + span { &::after { opacity: var(--opacity-checked); } } /* &:has(input:focus-visible) */ & input:focus-visible + span { &::before { outline: var(--focus-outline); outline-offset: calc((2 / 16) * 1rem); } } &:has(input:disabled) { --border-color: var(--color-text) / 0.5; --background-color: var(--color-bg-lighter); --color: var(--color-text) / 0.5; --opacity-checked: 0.5; pointer-events: none; } } .Checkbox { --checkbox-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="white" d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z"/></svg>'); & > span { &::after { mask-image: var(--checkbox-image); } } } .Checkbox--toggle { --inline-size: calc((var(--space-m) * 2) - ((10 / 16) * 1rem)); & > span { &::after { --block-size: calc(var(--space-m) - ((10 / 16) * 1rem)); --inline-size: calc(var(--space-m) - ((10 / 16) * 1rem)); background-image: var(--checkbox-image); background-color: oklch(var(--color-text)); border-radius: calc((2 / 16) * 1rem); inset-block-start: 50%; inset-inline-start: calc((5 / 16) * 1rem); transition: background-color 200ms, opacity 200ms, transform 200ms; transform: translateY(-50%); transform-origin: 50% 50%; mask-image: none; opacity: 0.5; } } & input:not(:checked) + span { &::after { background-size: 0 0; } } & input:checked + span { &::after { background-color: oklch(var(--color-primary)); transform: translateY(-50%) translateX(100%); } } & input:disabled + span { &::after { background-color: oklch(var(--color-text)); background-size: 0 0; } } } .Radio { --block-size: calc(var(--space-m) + ((2 / 16) * 1rem)); --inline-size: calc(var(--space-m) + ((2 / 16) * 1rem)); & > span { &::after, &::before { border-radius: 50%; inset-inline-start: calc((-1 / 16) * 1rem); } &::after { --block-size: calc(var(--space-m) - ((10 / 16) * 1rem)); --inline-size: calc(var(--space-m) - ((10 / 16) * 1rem)); background: oklch(var(--color-text)); inset-block-start: 50%; inset-inline-start: calc((5 / 16) * 1rem); transform: translateY(-50%); } } } } @layer components { .Range { --color: var(--color-primary); --size: var(--space-m); appearance: none; background: transparent; border: 0; border-radius: calc((4 / 16) * 1rem); block-size: var(--size); display: block; inline-size: 100%; margin: 0; overflow: hidden; &:hover { --color: var(--color-secondary); } &:focus { outline: none; } &:focus-visible { outline: var(--focus-outline); outline-offset: calc((4 / 16) * 1rem); } &:disabled { --color: var(--color-text) / 0.5; pointer-events: none; } } .Range::-moz-range-track { background: transparent; background-image: linear-gradient( to right, oklch(var(--color-bg-lighter)), oklch(var(--color-bg-lighter)) ); background-position: 0% center; background-repeat: no-repeat; background-size: 100% var(--space-2xs); block-size: var(--size); inline-size: 100%; } .Range::-moz-range-thumb { appearance: none; background: oklch(var(--color)); border: 0; border-radius: 100%; block-size: var(--size); inline-size: var(--size); transition: background-color 200ms; } .Range::-webkit-slider-runnable-track { background: transparent; background-image: linear-gradient( to right, oklch(var(--color-bg-lighter)), oklch(var(--color-bg-lighter)) ); background-position: 0% center; background-repeat: no-repeat; background-size: 100% var(--space-2xs); block-size: var(--size); inline-size: 100%; } .Range::-webkit-slider-thumb { appearance: none; background: oklch(var(--color)); border: 0; border-radius: 100%; block-size: var(--size); inline-size: var(--size); transition: background-color 200ms; } } @layer components { .Progress { --color: var(--color-primary); --size: var(--space-m); appearance: none; background: transparent; background-image: linear-gradient( to right, oklch(var(--color-bg-lighter)), oklch(var(--color-bg-lighter)) ); background-position: 0% center; background-repeat: no-repeat; background-size: 100% var(--space-2xs); border: 0; border-radius: calc((4 / 16) * 1rem); block-size: var(--size); display: block; inline-size: 100%; overflow: hidden; } .Progress::-moz-progress-bar { background: transparent; background-image: linear-gradient( to right, oklch(var(--color-secondary)), oklch(var(--color-primary)) ); background-position: 0% center; background-repeat: no-repeat; background-size: 100% var(--space-2xs); block-size: var(--size); inline-size: 100%; } .Progress::-webkit-progress-bar { background: transparent; } .Progress::-webkit-progress-value { background: transparent; background-image: linear-gradient( to right, oklch(var(--color-secondary)), oklch(var(--color-primary)) ); background-position: 0% center; background-repeat: no-repeat; background-size: 100% var(--space-2xs); block-size: var(--size); } } @layer components { .Field { --background-color: var(--color-bg-dark); --border-color: var(--color-primary); --border-width: calc((2 / 16) * 1rem); --color: var(--color-text); --font-size: var(--step-1); --line-height: 1.2; --padding-block: calc(var(--space-xs)); --padding-inline: calc(var(--space-s) - var(--border-width)); --height: calc( (var(--font-size) * var(--line-height)) + ((var(--padding-block) + var(--border-width)) * 2) ); appearance: none; background: oklch(var(--background-color)); border: var(--border-width) solid oklch(var(--border-color)); border-radius: calc((8 / 16) * 1rem); block-size: var(--height); color: oklch(var(--color)); display: block; font-family: var(--font-sans), sans-serif; font-size: var(--font-size); inline-size: 100%; line-height: var(--line-height); padding: var(--padding-block) var(--padding-inline); transition: color 200ms, border-color 200ms; &:hover { --border-color: var(--color-secondary); } &:focus { --border-color: var(--color-secondary); outline: none; } &:focus-visible { --underline-opacity: 0; outline: var(--focus-outline); outline-offset: calc((2 / 16) * 1rem); } &::placeholder { color: oklch(var(--color-text)); opacity: 0.5; font-size: var(--step-0); } &[disabled] { --background-color: var(--color-bg-light); --border-color: var(--color-bg-lighter); --color: var(--color-text) / 0.5; pointer-events: none; } &[rows] { resize: vertical; } } } @layer components { .Select { --background-color: var(--color-bg-dark); --border-color: var(--color-primary); --border-width: calc((2 / 16) * 1rem); --color: var(--color-text); --font-size: var(--step-1); --line-height: 1.2; --padding-block: calc(var(--space-xs)); --padding-inline: calc(var(--space-s) - var(--border-width)); --height: calc( (var(--font-size) * var(--line-height)) + ((var(--padding-block) + var(--border-width)) * 2) ); appearance: none; background: oklch(var(--background-color)); background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill="none" stroke="oklch(97% 0.02 80)" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="m2 5 6 6 6-6"/></svg>'); background-size: var(--space-m) auto; background-repeat: no-repeat; background-position: right var(--space-s) center; border: var(--border-width) solid oklch(var(--border-color)); border-radius: calc((8 / 16) * 1rem); block-size: var(--height); color: oklch(var(--color)); display: block; font-family: var(--font-sans), sans-serif; font-size: var(--font-size); inline-size: 100%; line-height: var(--line-height); padding: var(--padding-block) var(--padding-inline); padding-inline-end: calc(var(--space-m) + (var(--space-s) * 2)); transition: color 200ms, border-color 200ms; &:hover { --border-color: var(--color-secondary); } &:focus { --border-color: var(--color-secondary); outline: none; } &:focus-visible { --underline-opacity: 0; outline: var(--focus-outline); outline-offset: calc((2 / 16) * 1rem); } &[disabled] { --background-color: var(--color-bg-light); --border-color: var(--color-bg-lighter); --color: var(--color-text) / 0.5; pointer-events: none; } } } @layer components { :root { --button-height: calc( (var(--step-1) * 1.2) + (var(--space-s) * 2) + ((4 / 16) * 1rem) ); --button-small-height: calc( (var(--step-0) * 1.2) + (var(--space-xs) * 2) + ((2 / 16) * 1rem) ); } .Button { --color: var(--color-primary); --border-color: var(--color); --border-width: 2; --border-opacity: 0; --font-size: var(--step-1); --line-height: 1.2; --icon-scale: 1; --padding-block: var(--space-xs); --padding-inline: var(--space-s); --background-padding-box: linear-gradient( to right, oklch(var(--color-bg-default)), oklch(var(--color-bg-default)) 34%, oklch(var(--color-bg-default) / 0.95) 67%, oklch(var(--color-bg-default) / 0.9) ); --background-border-box: linear-gradient( 45deg, oklch(var(--color-secondary)), oklch(var(--color-primary)) ); align-items: center; border-radius: calc((8 / 16) * 1rem); border: calc((var(--border-width) / 16) * 1rem) solid oklch(var(--border-color) / var(--border-opacity)); background: var(--background-padding-box) padding-box, var(--background-border-box) border-box; background-size: 300% 100%, 100% 100%; background-position: 0 0, 0 0; color: oklch(var(--color)); cursor: pointer; display: flex; gap: var(--space-xs); font-family: var(--font-sans), sans-serif; font-size: var(--font-size); font-weight: 700; inline-size: fit-content; justify-content: center; line-height: var(--line-height); padding: var(--padding-block) var(--padding-inline); text-align: start; text-decoration: none; transition: color 200ms, border-color 200ms, background-position 400ms; user-select: none; -webkit-user-select: none; &:hover { --color: var(--color-secondary); --border-opacity: 1; background-position: 100% 0, 0 0; } &:focus { --color: var(--color-focus); outline: none; } &:focus-visible { --underline-opacity: 0; outline: var(--focus-outline); outline-offset: calc((2 / 16) * 1rem); } &:has(.Checkbox input:not(:checked)) { --border-color: var(--color-bg-lighter); --border-opacity: 1; } &:has(.Checkbox input:checked) { & .Checkbox { --color: var(--color-primary); } } &:disabled, &[disabled], &:has([disabled]) { background: oklch(var(--color-bg-light)); --background-color: var(--color-bg-light); --border-color: var(--color-bg-lighter); --border-opacity: 1; --color: var(--color-text) / 0.5; pointer-events: none; } & svg { --size: calc(var(--font-size) * var(--line-height)); block-size: var(--size); color: currentColor; fill: currentColor; flex: 0 0 auto; inline-size: var(--size); pointer-events: none; transform: scale(var(--icon-scale)); transform-origin: center center; user-select: none; -webkit-user-select: none; } } .Button--small { --border-width: 1; --font-size: var(--step-0); } .Button-group { align-items: center; display: flex; flex-wrap: wrap; margin-block: var(--block-gap2); & > * { flex: 0 0 auto; margin-block: auto; } & .Button { &:not(:nth-last-of-type(1)) { border-end-end-radius: 0; border-start-end-radius: 0; } &:not(:nth-of-type(1)) { border-end-start-radius: 0; border-start-start-radius: 0; } &:focus, &:hover { z-index: 1; } &:disabled { z-index: -1; } & + & { margin-inline-start: calc((var(--border-width) / 16) * -1rem); } } &:first-child { margin-block-start: 0; } &:last-child { margin-block-end: 0; } } .Button-tabs { align-items: center; display: flex; flex-wrap: wrap; /* gap: var(--space-xs); */ margin-block: var(--block-gap2); & > * { flex: 0 0 auto; margin-block: auto; } & .Button { border-block-end: 0; border-end-end-radius: 0; border-end-start-radius: 0; padding-block-end: calc( var(--padding-block) + ((var(--border-width) / 16) * 1rem) ); &[aria-current='page'] { z-index: 1; } &:not([aria-current='page']) { background: none; } &:focus, &:hover { z-index: 2; } &:disabled { z-index: -1; } & + & { margin-inline-start: calc((var(--border-width) / 16) * -1rem); } } &:first-child { margin-block-start: 0; } &:last-child { margin-block-end: 0; } } .Button-pagination { align-items: center; display: flex; flex-wrap: wrap; justify-content: space-between; margin-block: var(--block-gap2); & > * { flex: 0 0 auto; } &:first-child { margin-block-start: 0; } &:last-child { margin-block-end: 0; } } } @layer components { .Menu { align-items: baseline; display: flex; flex-direction: column; list-style: none; margin: 0; } .Menu__item { --font-size: var(--step-0); border-block-end: calc((2 / 16) * 1rem) solid oklch(var(--color-bg-lighter)); inline-size: 100%; margin: 0; padding: var(--space-xs); &::before { display: none; } } .Menu__link { display: block; &[aria-current='page'] { --color: var(--color-text); --underline-opacity: 0; } } } @layer components { .Card-container { container-name: card-container; container-type: inline-size; display: grid; gap: var(--grid-column-gap); grid-template-columns: repeat(6, 1fr); & > * { grid-column: 1 / -1; } } .Card { display: block; background-image: linear-gradient( 225deg, oklch(var(--color-bg-default) / 1), oklch(var(--color-bg-default) / 0.5) ); border: calc((1 / 16) * 1rem) solid oklch(var(--color-bg-lighter)); border-radius: calc((8 / 16) * 1rem); padding: var(--space-m) var(--space-m-l); & > h2, & > h3 { inline-size: fit-content; position: relative; &::before { background-image: linear-gradient( to right, oklch(var(--color-secondary) / 1), oklch(var(--color-primary) / 0.5) 40%, oklch(var(--color-primary) / 0) 100% ); block-size: calc((2 / 16) * 1rem); content: ''; display: block; inset-block-start: 100%; inset-inline: 0; position: absolute; } } & p { --font-size: var(--step-0); } } @container card-container (inline-size >= calc((600 / 16) * 1rem)) and (inline-size < calc((1000 / 16) * 1rem)) { .Card { grid-column: auto / span 3; &:last-child:nth-child(2n + 1) { grid-column: 1 / -1; } } } @container card-container (inline-size >= calc((1000 / 16) * 1rem)) { .Card { grid-column: auto / span 2; } } } @layer components { .Code { background: oklch(var(--color-bg-dark)); border: calc((2 / 16) * 1rem) solid oklch(var(--color-bg-lighter)); border-radius: calc((8 / 16) * 1rem); font-size: var(--step-0); margin-block: var(--block-gap2); overflow: auto; overscroll-behavior-inline: contain; padding: 0; &:first-child { margin-block-start: 0; } &:last-child { margin-block-end: 0; } & > code { color: oklch(var(--color-text)); display: block; padding: var(--space-m); } } } @layer components { .Alert { --border-width: 2; --background-padding-box: linear-gradient( to right, oklch(var(--color-bg-default)), oklch(var(--color-bg-dark)) ); --background-border-box: linear-gradient( 45deg, oklch(var(--color-secondary)), oklch(var(--color-primary)) ); border: calc((var(--border-width) / 16) * 1rem) solid oklch(var(--color-bg-lighter)); border-color: transparent; border-radius: calc((8 / 16) * 1rem); background: var(--background-padding-box) padding-box, var(--background-border-box) border-box; margin-block: var(--block-gap2); padding: var(--space-m); text-align: center; &:first-child { margin-block-start: 0; } &:last-child { margin-block-end: 0; } & > * { max-inline-size: none; } } .Alert--small { --border-width: 1; --font-size: var(--step-0); padding: var(--space-s); } } @layer components { .Container { --background-color: var(--color-bg-default); --background-opacity: 0; background: oklch(var(--background-color) / var(--background-opacity)); padding-block: var(--grid-row-gap); & > * { grid-column: inner-start / inner-end; } & > & { grid-column: outer-start / outer-end; inline-size: auto; margin-inline: calc(-1 * var(--grid-margin)); } & > aside { order: 2; } & > main { order: 1; } &:not([class*='Container--']) { & + & { padding-block-start: 0; } } } .Container--dark { --background-color: var(--color-bg-dark); --background-opacity: 1; } .Container--light { --background-color: var(--color-bg-light); --background-opacity: 1; } @container grid (inline-size >= calc((800 / 16) * 1rem)) { .Container { & > aside { grid-column: aside-start / aside-end; order: 1; } & > main { grid-column: main-start / main-end; order: 2; } } } } @layer components { .Nav { --grid-template: var(--grid-template-basic); background: oklch(var(--color-bg-dark)); block-size: auto; color: oklch(var(--color-text)); display: none; inline-size: 100%; inset: 0 0 auto 0; min-block-size: var(--header-height); padding-block-start: var(--header-space); padding-block-end: calc(var(--header-space) * 2); &:popover-open { display: grid; } &.\:popover-open { display: grid; margin-block-start: calc(-1 * var(--header-space)); margin-inline: calc(-1 * (var(--grid-margin) + var(--grid-column-gap))); width: auto; } } .Nav__settings { background: oklch(var(--color-bg-dark)); border-radius: calc((8 / 16) * 1rem); border: calc((1 / 16) * 1rem) solid oklch(var(--color-bg-lighter)); inset: 0; margin: auto; padding: var(--space-xs) var(--space-s); &[style*='--inset'] { inset: calc(var(--space-s) + (1px * var(--inset-top))) calc(1px * var(--inset-right)) auto auto; } } @supports not selector(:popover-open) { .Nav__settings { &[style*='--inset'] { inset-block-start: calc(var(--space-s) + var(--button-small-height)); inset-inline-end: 0; } } } @container header (inline-size < calc((500 / 16) * 1rem)) { .Nav { & .Button-group { grid-column: main-start / main-end; } & [popovertarget='settings'] { display: none; } } .Nav__settings { display: contents; } } @container header (inline-size >= calc((500 / 16) * 1rem)) { .Nav { display: contents; &:popover-open { display: contents; } &.\:popover-open { display: contents; } & .Menu { flex-direction: row; gap: var(--space-s); } & .Menu__item { border: 0; inline-size: auto; padding: 0; } } @supports not selector(:popover-open) { .Nav__settings { &:not(.\:popover-open) { display: none; } } } } } @layer components { :root { --header-space: var(--space-s-m); --header-height: calc((var(--header-space) * 2) + var(--button-small-height)); } .Header { --grid-template: var(--grid-template-basic); background: oklch(var(--color-bg-dark)); block-size: var(--header-height); padding-block: var(--header-space); position: relative; z-index: 1; } .Header__main { align-items: center; container-name: header; container-type: inline-size; display: flex; gap: var(--space-s); justify-content: space-between; .Button[popovertarget='nav'] { --icon-scale: 1.5; justify-self: end; } @container header (inline-size >= calc((500 / 16) * 1rem)) { .Button[popovertarget='nav'] { display: none; --icon-scale: 1.5; justify-self: end; } } } .Header__logo { --underline-opacity: 0; margin-inline-end: auto; font-size: var(--font-size); font-weight: 400; position: relative; &:not(:focus):not(:hover) { --color: var(--color-secondary); } } .Header__tag { color: oklch(var(--color-bg-default)); display: block; background: oklch(var(--color-primary)); background-image: linear-gradient( 45deg, oklch(var(--color-secondary)), oklch(var(--color-primary)) ); border-radius: calc((8 / 16) * 1rem); font-size: var(--step-0); font-weight: 700; inset-block-start: 0; inset-inline-start: calc(100% + var(--space-xs)); line-height: 1; padding: var(--space-3xs) var(--space-2xs); position: absolute; text-transform: uppercase; transform: scale(0.75); transform-origin: 0% 50%; } } @layer components { .Footer { --color-anchor: var(--color-text-subtle); --grid-template: var(--grid-template-basic); color: oklch(var(--color-text-subtle)); background: oklch(var(--color-bg-dark)); padding-block: var(--space-l-xl); } } @layer components { .Hero { --grid-template: var(--grid-template-basic); --hero-offset-height: 1; --hero-main-offset-height: 1; --hero-heading-offset-height: 0; --hero-offset-top: 0; --hero-offset: 0; --hero-main-space: var(--space-l); --hero-min-height: calc((250 / 16) * 1rem); --hero-max-height: calc((100dvh - var(--header-height)) * 0.618); --hero-height: clamp( var(--hero-min-height), calc(100dvw / 1.618), var(--hero-max-height) ); --hero-visible: min( max(0, calc(-1 * (var(--hero-offset-top) - (var(--scroll-y))))), var(--hero-offset-height) ); --hero-visible-ratio: calc((var(--hero-visible) / var(--hero-offset-height))); --hero-scale-ratio: calc( var(--hero-visible) / (var(--hero-offset-height) - (var(--hero-heading-offset-height))) ); --hero-main-min-height: calc(var(--step-5) + (var(--hero-main-space) * 2)); --hero-main-max-height: calc( var(--hero-max-height) + (var(--hero-main-space) * 2) ); --hero-main-height: clamp( var(--hero-main-min-height), calc(100% * (1 - var(--hero-visible-ratio))), var(--hero-main-max-height) ); --hero-font-size: clamp( var(--step-4), calc( var(--step-4) + ((var(--step-5) - var(--step-4)) * (1 - var(--hero-scale-ratio))) ), var(--step-5) ); aspect-ratio: 1.618 / 1; align-items: start; block-size: var(--hero-height); container-name: hero; container-type: size; position: relative; min-block-size: var(--hero-min-height); max-block-size: var(--hero-max-height); &::before { background: oklch(var(--color-bg-default)); background-image: repeating-conic-gradient( from calc(var(--hero-visible-ratio) * 20deg) at 0 100%, oklch(var(--color-bg-dark) / 1) 0 10deg, oklch(var(--color-bg-dark) / 0) 0 20deg ), linear-gradient( 225deg, oklch(var(--color-bg-dark) / 0.5), oklch(var(--color-bg-dark) / 0) ); block-size: 150%; display: block; content: ''; position: absolute; top: 0; inline-size: 100%; } &::after { background: linear-gradient( to top, oklch(var(--color-bg-default) / 1), oklch(var(--color-bg-default) / 0) ), linear-gradient( to right, oklch(var(--color-bg-default) / 1), oklch(var(--color-bg-default) / 0) ); block-size: 50%; display: block; content: ''; position: absolute; top: 100%; inline-size: 100%; } } .Hero__main { align-items: center; display: grid; grid-template-columns: repeat(5, 1fr); justify-items: start; block-size: var(--hero-main-height); inset-block-start: 0; min-block-size: var(--hero-main-min-height); max-block-size: var(--hero-main-max-height); padding-block: var(--hero-main-space); position: sticky; & > * { grid-column: 1 / 6; grid-row: 1; justify-self: start; } } .Hero__image { --opacity: calc(1 - var(--hero-scale-ratio)); aspect-ratio: 1 / 1; block-size: 100%; grid-column: 4 / 6; justify-self: center; opacity: var(--opacity); overflow: hidden; @container hero (inline-size > calc((600 / 16) * 1rem)) { grid-column: 3 / 6; } img { margin: auto; } } @supports (width: calc(1px * pow(1, 1))) { .Hero__image { --opacity: pow(1 - var(--hero-scale-ratio), 4); } } .Hero__heading { --color1: color-mix( in oklch, oklch(var(--color-secondary)) calc(100% * (1 - var(--hero-scale-ratio))), oklch(var(--color-text)) ); --color2: color-mix( in oklch, oklch(var(--color-primary)) calc(100% * (1 - var(--hero-scale-ratio))), oklch(var(--color-text)) ); background: linear-gradient(50deg, var(--color1), var(--color2)); background-clip: text; -webkit-background-clip: text; -webkit-text-fill-color: transparent; font-size: var(--hero-font-size); margin: 0; transform-origin: 0 100%; } .Hero__intro { --ratio1: calc(1 - var(--hero-scale-ratio)); --font-size: var(--step-0); align-self: start; inset-block-start: 50%; grid-column: 1 / 4; margin-top: calc((var(--hero-font-size) / 2)); opacity: var(--ratio1); position: absolute; text-wrap: balance; @container hero (inline-size > calc((600 / 16) * 1rem)) { grid-column: 1 / 3; } @container hero (block-size > calc((300 / 16) * 1rem)) { --font-size: var(--step-1); } } @supports (width: calc(1px * pow(1, 1))) { .Hero__intro { --ratio1: pow(1 - var(--hero-scale-ratio), 8); } } } @layer components { .List { --border-color: var(--color-bg-lighter); border: calc((1 / 16) * 1rem) solid oklch(var(--border-color)); border-radius: calc((8 / 16) * 1rem); display: grid; grid-template-columns: 1fr; list-style: none; & > * { background: none; border-block-end: calc((1 / 16) * 1rem) solid oklch(var(--border-color)); inline-size: 100%; margin: 0; min-inline-size: 0; padding: var(--space-xs) var(--space-s); &:last-child { border-block-end: 0; } } & > a { text-decoration: none; &:not(:hover):not(:focus-visible) { --color: var(--color-text); } } & > li { &::before { display: none; } } } } @layer components { .Stack { display: grid; grid-template-columns: 1fr; grid-gap: var(--block-gap1); & > * { margin-block-end: 0; } } } @layer components { .Accordion { display: block; } .Accordion__header { list-style: none; user-select: none; -webkit-user-select: none; &::-webkit-details-marker { display: none; } } } @layer components { .Swatches { display: flex; flex-wrap: wrap; gap: var(--space-xs); list-style: none; & li { aspect-ratio: 1 / 1; display: block; flex: 0 0 auto; font-size: var(--step-0); margin: 0; max-inline-size: calc((100 / 16) * 1rem); padding: var(--space-xs); inline-size: 100%; &::before { display: none; } } } } @layer utility { .bg-default { background-color: oklch(var(--color-bg-default)); } .bg-dark { background-color: oklch(var(--color-bg-dark)); } .bg-light { background-color: oklch(var(--color-bg-light)); } .bg-lighter { background-color: oklch(var(--color-bg-lighter)); } .bg-text { background-color: oklch(var(--color-text)); } .bg-text-subtle { background-color: oklch(var(--color-text-subtle)); } .bg-primary { background-color: oklch(var(--color-primary)); } .bg-secondary { background-color: oklch(var(--color-secondary)); } .bg-tertiary { background-color: oklch(var(--color-tertiary)); } .bg-focus { background-color: oklch(var(--color-focus)); } .color-bg { color: oklch(var(--color-bg-default)); } .color-text { color: oklch(var(--color-text)); } .color-subtle { color: oklch(var(--color-text-subtle)); } .color-primary { color: oklch(var(--color-primary)); } .color-secondary { color: oklch(var(--color-secondary)); } .color-tertiary { color: oklch(var(--color-tertiary)); } } @layer utility { .space-2xs { --space: var(--space-2xs); } .space-xs { --space: var(--space-xs); } .space-s { --space: var(--space-s); } .space-m { --space: var(--space-m); } .space-l { --space: var(--space-l); } .mb-start { margin-block-start: var(--space); } .mb-end { margin-block-end: var(--space); } .mb { margin-block: var(--space); } .mb-0 { margin-block: 0; } .mi-start { margin-inline-start: var(--space); } .mi-end { margin-inline-end: var(--space); } .mi { margin-inline: var(--space); } .mi-0 { margin-inline: 0; } } @layer utility { .monospace { font-family: var(--font-monospace); } .h0 { --font-size: var(--step-5); font-size: var(--font-size); } .h1 { --font-size: var(--step-4); font-size: var(--font-size); } .h2 { --font-size: var(--step-3); font-size: var(--font-size); } .h3 { --font-size: var(--step-2); font-size: var(--font-size); } .h4 { --font-size: var(--step-1); font-size: var(--font-size); } .p { --font-size: var(--step-1); font-size: var(--font-size); } .small { --font-size: var(--step-0); font-size: var(--font-size); } .text-center { text-align: center; } .text-end { text-align: end; } .text-start { text-align: start; } .va-bottom { vertical-align: bottom; } .va-middle { vertical-align: middle; } .va-top { vertical-align: top; } } @layer utility { .gap-2xs { gap: var(--space-2xs); } .gap-xs { gap: var(--space-xs); } .gap-s { gap: var(--space-s); } .gap-m { gap: var(--space-m); } .flex { display: flex; } .flex-wrap { flex-wrap: wrap; } .flex-shrink-0 { flex-shrink: 0; } .flex-grow-1 { flex-grow: 1; } .inline-flex { display: inline-flex; } .order-1 { order: 1; } .order-2 { order: 2; } .order-3 { order: 3; } .order-4 { order: 4; } .order-5 { order: 5; } .ac-around { align-content: space-around; } .ac-between { align-content: space-between; } .ac-evenly { align-content: space-evenly; } .ac-center { align-content: center; } .ac-end { align-content: end; } .ac-start { align-content: start; } .ac-stretch { align-content: stretch; } .ai-baseline { align-items: baseline; } .ai-center { align-items: center; } .ai-end { align-items: end; } .ai-start { align-items: start; } .ai-stretch { align-items: stretch; } .jc-around { justify-content: space-around; } .jc-between { justify-content: space-between; } .jc-evenly { justify-content: space-evenly; } .jc-center { justify-content: center; } .jc-end { justify-content: end; } .jc-start { justify-content: start; } .jc-stretch { justify-content: stretch; } .ji-baseline { justify-items: baseline; } .ji-center { justify-items: center; } .ji-end { justify-items: end; } .ji-start { justify-items: start; } .ji-stretch { justify-items: stretch; } } @layer utility { .hidden, :where(.Radio) input[type='radio'], :where(.Checkbox) input[type='checkbox'] { border: 0; clip: rect(0 0 0 0); clip-path: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; white-space: nowrap; } }
